{"is_source_file": true, "format": "JavaScript", "description": "This file contains a utility function that extracts user-friendly error messages from various error object shapes in a JavaScript/React project.", "external_files": ["axios"], "external_methods": ["err?.response", "err instanceof Error", "Array.isArray", "JSON.stringify"], "published": ["extractErrorMessage"], "classes": [], "methods": [{"name": "extractErrorMessage(err, fallback = \"An unexpected error occurred.\")", "description": "Converts various error object shapes into a human-readable string for display in the user interface.", "scope": "", "scopeKind": ""}], "calls": ["Array.prototype.map", "Array.prototype.filter", "JSON.stringify"], "search-terms": ["error extraction", "error handling", "extractErrorMessage", "error utility", "error message parser"], "state": 2, "file_id": 22, "knowledge_revision": 70, "git_revision": "", "ctags": [{"_type": "tag", "name": "extractErrorMessage", "path": "/home/kavia/workspace/code-generation/tailored-api-response-system-96060-96069/frontend_react/src/utils/error.js", "pattern": "/^ export function extractErrorMessage(err, fallback = \"An unexpected error occurred.\") {$/", "language": "JavaScript", "kind": "function", "signature": "(err, fallback = \"An unexpected error occurred.\")"}], "hash": "ea3dccbdb8876a617a02b3d1c29cdcf2", "format-version": 4, "code-base-name": "frontend_react", "filename": "frontend_react/src/utils/error.js", "revision_history": [{"70": ""}]}